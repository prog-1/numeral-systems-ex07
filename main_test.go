package main

import "testing"

func TestNumToBin(t *testing.T) {
	for _, tc := range []struct {
		num  int64
		want string
	}{
		{0, "0"},
		{1, "1"},
		{8, "1000"},
		{-1, "1111111111111111111111111111111111111111111111111111111111111111"},
		{1000_0000_0000_0000, "11100011010111111010100100110001101000000000000000"},
		{-1000_0000_0000_0001, "1111111111111100011100101000000101011011001110010111111111111111"},
	} {
		got := NumToBin(tc.num)
		if got != tc.want {
			t.Errorf("ERR: NumToBin(%v): got: %s, want: %s", tc.num, got, tc.want)
		}
	}
}

func BenchmarkNumToBin(b *testing.B) {
	for n := 0; n < b.N; n++ {
		NumToBin(-1000_0000_0000_0001)
	}
}

func TestBinNumSum(t *testing.T) {
	for _, tc := range []struct {
		a    string
		b    string
		want string
	}{
		{"0", "0", "0"},
		{"1", "0", "1"},
		{"1", "11", "100"},
		{"11001" /* 25 */, "1111111111111111111111111111111111111111111111111111111111110010" /* -14 */, "1011" /* 11 */},
		{"1111111111111111111111111111111111111111111111111111111111110110" /* -10 */, "111" /* 7 */, "1111111111111111111111111111111111111111111111111111111111111101" /* -3 */},
		{"11" /* 3 */, "1111111111111111111111111111111111111111111111111111111111111101" /* -3 */, "0" /* 0 */},
	} {
		got := BinNumSum(tc.a, tc.b)
		if got != tc.want {
			t.Errorf("ERR: BinNumSum(%s, %s): got: %s, want: %s", tc.a, tc.b, got, tc.want)
		}
	}
}

func BenchmarkBinNumSum(b *testing.B) {
	for n := 0; n < b.N; n++ {
		BinNumSum("1111111111111111111111111111111111111111111111111111111111110110", "111")
	}
}
